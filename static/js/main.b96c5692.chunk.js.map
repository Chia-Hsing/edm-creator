{"version":3,"sources":["reportWebVitals.js","components/Input.js","utils/utilities.js","components/SideBar.js","components/edm/EDMHeader.js","components/edm/EDMBanner.js","components/edm/EDMBody.js","components/edm/EDMContactInfo.js","components/edm/EDMFooter.js","components/edm/EDM.js","App.js","reducer/sectionReducer.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Input","props","eleInput","type","htmlFor","label","id","className","value","config","onChange","inputChange","disabledOne","setUrlOne","disabled","disabledTwo","setUrlTwo","checked","ticked","updateObj","oldObj","updatedProps","SideBar","useState","controls","title","eleType","eleConfig","placeholder","val","subtitle_one","content_one","button_one","tick","set_url_one","subtitle_two","content_two","button_two","set_url_two","setUrl","input","setInput","useContext","context","section","setSection","formElement","key","push","form","map","ele","e","controlName","updatedControls","target","inputChangeHandler","onSubmit","preventDefault","formData","forEach","inputStateKey","buttonStateKey","payload","sectionData","length","onClick","downloadHtml","EDMHeader","style","width","height","border","backgroundColor","boxShadow","src","alt","display","float","EDMBanner","align","margin","fontWeight","textAlign","size","EDMBody","learnMoreBtn","borderRadius","color","fontSize","lineHeight","cellspacing","cellpadding","subtitleOne","contentOne","buttonOne","verticalAlign","href","urlOne","textDecoration","subtitleTwo","contentTwo","buttonTwo","urlTwo","EDMContactInfo","padding","EDMFooter","EDM","sections","item","i","set_url_Two","ref","edm","fontFamily","App","edmRef","zip","JSZip","html","innerHTML","replace","file","generateAsync","content","saveAs","sectionReducer","state","action","updatedState","addSection","slice","removeSection","createContext","initialState","Home","reducer","useReducer","Provider","ReactDOM","render","document","getElementById"],"mappings":"iNAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qECmHCQ,EAtHD,SAAAC,GACV,IAAIC,EAAW,KAEf,OAAQD,EAAME,MACV,IAAK,QACDD,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,+CACIC,GAAIL,EAAMI,MACVE,UAAU,QACVC,MAAOP,EAAMO,OACTP,EAAMQ,QAJd,IAKIC,SAAUT,EAAMU,kBAI5B,MACJ,IAAK,oBACD,IAAIC,EAKAA,EAHgB,gBAAhBX,EAAMI,QAA4BJ,EAAMY,UAM5CX,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,+CACIC,GAAIL,EAAMI,MACVE,UAAU,QACVC,MAAOP,EAAMO,OACTP,EAAMQ,QAJd,IAKIC,SAAUT,EAAMU,YAChBG,SAAUF,QAItB,MACJ,IAAK,oBACD,IAAIG,EAKAA,EAHgB,gBAAhBd,EAAMI,QAA4BJ,EAAMe,UAM5Cd,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,+CACIC,GAAIL,EAAMI,MACVE,UAAU,QACVC,MAAOP,EAAMO,OACTP,EAAMQ,QAJd,IAKIC,SAAUT,EAAMU,YAChBG,SAAUC,QAItB,MACJ,IAAK,WACDb,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,kDACIC,GAAIL,EAAMI,MACVE,UAAU,WACVC,MAAOP,EAAMO,OACTP,EAAMQ,QAJd,IAKIC,SAAUT,EAAMU,kBAI5B,MACJ,IAAK,WACDT,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,+CACIC,GAAIL,EAAMI,MACVE,UAAU,YACNN,EAAMQ,QAHd,IAIIC,SAAUT,EAAMU,YAChBM,QAAShB,EAAMiB,UAEnB,0BAGR,MACJ,QACIhB,EACI,qCACI,uBAAOE,QAASH,EAAMI,MAAtB,SAA8BJ,EAAMI,QACpC,uBACA,+CACIC,GAAIL,EAAMI,MACVE,UAAU,QACVC,MAAOP,EAAMO,OACTP,EAAMQ,QAJd,IAKIC,SAAUT,EAAMU,kBAOpC,OAAO,mCAAGT,KCvHDiB,EAAY,SAACC,EAAQC,GAC9B,OAAO,2BACAD,GACAC,ICuMIC,EApMC,SAAArB,GAAS,MAEKsB,mBAAS,CAC/BC,SAAU,CACNC,MAAO,CACHC,QAAS,QACTC,UAAW,CACPxB,KAAM,OACNyB,YAAa,SAEjBC,IAAK,IAETC,aAAc,CACVJ,QAAS,QACTC,UAAW,CACPxB,KAAM,OACNyB,YAAa,YAEjBC,IAAK,IAETE,YAAa,CACTL,QAAS,WACTC,UAAW,CACPC,YAAa,WAEjBC,IAAK,IAETG,WAAY,CACRN,QAAS,WACTC,UAAW,CACPxB,KAAM,YAEV8B,MAAM,GAEVC,YAAa,CACTR,QAAS,oBACTC,UAAW,CACPxB,KAAM,OACNyB,YAAa,OAEjBC,IAAK,IAETM,aAAc,CACVT,QAAS,QACTC,UAAW,CACPxB,KAAM,OACNyB,YAAa,YAEjBC,IAAK,IAETO,YAAa,CACTV,QAAS,WACTC,UAAW,CACPC,YAAa,WAEjBC,IAAK,IAETQ,WAAY,CACRX,QAAS,WACTC,UAAW,CACPxB,KAAM,YAEV8B,MAAM,GAEVK,YAAa,CACTZ,QAAS,oBACTC,UAAW,CACPxB,KAAM,OACNyB,YAAa,OAEjBC,IAAK,KAGbU,OAAQ,CACJP,YAAY,EACZK,YAAY,KA3EC,mBAEdG,EAFc,KAEPC,EAFO,OA8ESC,qBAAWC,GA9EpB,mBA8EdC,EA9Ec,KA8ELC,EA9EK,KAwJjBC,EAAc,GAElB,IAAK,IAAIC,KAAOP,EAAMhB,SAClBsB,EAAYE,KAAK,CACbD,MACAtC,OAAQ+B,EAAMhB,SAASuB,KAI/B,IAAME,EAAOH,EAAYI,KAAI,SAAAC,GACzB,OACI,cAAC,EAAD,CAEI9C,MAAO8C,EAAIJ,IACXvC,MAAO2C,EAAI1C,OAAOoB,IAClB1B,KAAMgD,EAAI1C,OAAOiB,QACjBjB,OAAQ0C,EAAI1C,OAAOkB,UACnBhB,YAAa,SAAAyC,GAAC,OAxFC,SAACA,EAAGC,GAE3B,GAA4C,aAAxCb,EAAMhB,SAAS6B,GAAa3B,QAAwB,CACpD,IAAM4B,EAAkBnC,EAAUqB,EAAMhB,SAAP,eAC5B6B,EAAclC,EAAUqB,EAAMhB,SAAS6B,GAAc,CAClDxB,IAAKuB,EAAEG,OAAO/C,UAItBiC,EAAS,CAAEjB,SAAU8B,EAAiBf,OAAO,eAAMC,EAAMD,UAI7D,GAA4C,aAAxCC,EAAMhB,SAAS6B,GAAa3B,QAC5B,GAAI0B,EAAEG,OAAOtC,QAAS,CAClB,IAAMqC,EAAkBnC,EAAUqB,EAAMhB,SAAP,eAC5B6B,EAAclC,EAAUqB,EAAMhB,SAAS6B,GAAc,CAClDpB,MAAM,MAGdQ,EAAS,CAAEjB,SAAU8B,EAAiBf,OAAO,2BAAMC,EAAMD,QAAb,kBAAsBc,GAAc,UAC7E,CACH,IAAMC,EAAkBnC,EAAUqB,EAAMhB,SAAP,eAC5B6B,EAAclC,EAAUqB,EAAMhB,SAAS6B,GAAc,CAClDpB,MAAM,MAGdQ,EAAS,CAAEjB,SAAU8B,EAAiBf,OAAO,2BAAMC,EAAMD,QAAb,kBAAsBc,GAAc,OA6D9DG,CAAmBJ,EAAGD,EAAIJ,MAC5C7B,OAAQiC,EAAI1C,OAAOwB,KACnBpB,UAAW2B,EAAMD,OAAOP,WACxBhB,UAAWwB,EAAMD,OAAOF,YARnBc,EAAIJ,QAarB,OACI,0BAASxC,UAAU,aAAnB,UACI,6CACA,uBAAMkD,SAlEQ,SAAAL,GAClBA,EAAEM,iBAEF,IAAIC,EAAW,GAEQ,CACnB,QACA,eACA,eACA,cACA,cACA,cACA,eAGWC,SAAQ,SAAAC,GACnBF,EAASE,GAAiBrB,EAAMhB,SAASqC,GAAehC,IACxDW,EAAMhB,SAASqC,GAAehC,IAAM,GACpCW,EAAMD,OAAOP,YAAa,EAC1BQ,EAAMD,OAAOF,YAAa,KAGN,CAAC,aAAc,cAEvBuB,SAAQ,SAAAE,GACpBH,EAASG,GAAkBtB,EAAMhB,SAASsC,GAAgB7B,KAC1DO,EAAMhB,SAASsC,GAAgB7B,MAAO,KAG1CY,EAAW,CAAE1C,KAAM,cAAe4D,QAASJ,KAqCvC,UACKV,EACD,oDAEJ,sBAAK1C,UAAU,QAAf,UACI,wBAAQO,SAAU8B,EAAQoB,YAAYC,QAAU,EAAG3D,GAAG,YAAY4D,QAtCjD,WACzBrB,EAAW,CAAE1C,KAAM,oBAqCX,4BAGA,wBAAQG,GAAG,cAAc4D,QAASjE,EAAMkE,aAAxC,uCC1JDC,EAtCG,WAsBd,OACI,uBAAOC,MATS,CAChBC,MAAO,OACPC,OAAQ,OACRC,OAAQ,yBACRC,gBAAiB,OACjBC,UAAW,uBAIX,SACI,gCACI,+BACI,6BACI,qBAAKC,IAAI,kCAAkCC,IAAI,cAAcP,MA1BzD,CACpBC,MAAO,QACPC,OAAQ,OACRM,QAAS,aAyBG,6BACI,qBAAKF,IAAI,kCAAkCC,IAAI,kBAAkBP,MAvB7D,CACpBC,MAAO,QACPC,OAAQ,OACRO,MAAO,QACPD,QAAS,qBCyBFE,EApCG,WAgBd,OACI,wBAAOV,MAVS,CAChBC,MAAO,MACPE,OAAQ,yBACRQ,MAAO,SACPC,OAAQ,YACRR,gBAAiB,OACjBC,UAAW,uBAIX,UACI,gCACI,6BACI,oBAAIL,MAAO,CAAEa,WAAY,MAAOC,UAAW,UAA3C,SACI,sBAAMC,KAAK,IAAX,iDAIZ,gCACI,6BACI,6BACI,qBAAKT,IAAI,kCAAkCC,IAAI,aAAaP,MA3B/D,CACbC,MAAO,OACPC,OAAQ,OACRM,QAAS,qBC4EFQ,EAhFC,SAAApF,GACZ,IAYMqF,EAAe,CACjBhB,MAAO,QACPC,OAAQ,SACRE,gBAAiB,UACjBc,aAAc,MACdf,OAAQ,OACRgB,MAAO,OACPN,WAAY,OACZO,SAAU,QAGd,OACI,uBAAOpB,MAxBU,CACjBC,MAAO,MACPW,OAAQ,YACRR,gBAAiB,OACjBC,UAAW,sBACXF,OAAQ,2BACRkB,WAAY,SACZC,YAAa,IACbC,YAAa,IACbZ,MAAO,UAeP,SACI,kCACK/E,EAAMwB,MACH,6BACI,oBAAI4C,MAAO,CAAEc,UAAW,OAAQK,MAAO,UAAWN,WAAY,OAA9D,SAAwEjF,EAAMwB,UAElF,KACHxB,EAAM4F,YACH,6BACI,oBAAIxB,MAAO,CAAEmB,MAAO,UAAWL,UAAW,QAA1C,SAAqDlF,EAAM4F,gBAE/D,KACH5F,EAAM6F,WACH,6BACI,oBAAIzB,MAAO,CAAEmB,MAAO,WAApB,SAAkCvF,EAAM6F,eAE5C,KACH7F,EAAM8F,UACH,6BACI,oBAAI1B,MAAO,CAAEE,OAAQ,OAAQyB,cAAe,SAAUb,UAAW,UAAjE,SACI,wBAAQd,MAAOiB,EAAf,SACI,mBAAGW,KAAMhG,EAAMiG,OAAQ3C,OAAO,QAAQc,MAAO,CAAE8B,eAAgB,OAAQX,MAAO,QAA9E,8BAMZ,KAEHvF,EAAMmG,YACH,6BACI,oBAAI/B,MAAO,CAAEmB,MAAO,UAAWL,UAAW,QAA1C,SAAqDlF,EAAMmG,gBAE/D,KACHnG,EAAMoG,WACH,6BACI,oBAAIhC,MAAO,CAAEmB,MAAO,WAApB,SAAkCvF,EAAMoG,eAE5C,KACHpG,EAAMqG,UACH,6BACI,oBAAIjC,MAAO,CAAEE,OAAQ,OAAQyB,cAAe,SAAUb,UAAW,UAAjE,SACI,wBAAQd,MAAOiB,EAAf,SACI,mBAAGW,KAAMhG,EAAMsG,OAAQhD,OAAO,QAAQc,MAAO,CAAE8B,eAAgB,OAAQX,MAAO,QAA9E,8BAMZ,WCPLgB,EAnEQ,WAuBnB,OACI,uBAAOnC,MAvBc,CACrBC,MAAO,MACPE,OAAQ,2BACRQ,MAAO,SACPC,OAAQ,YACRR,gBAAiB,OACjBC,UAAW,sBACXgB,WAAY,SACZF,MAAO,WAeP,SACI,gCACI,6BACI,6BACI,uBACInB,MAAO,CACHC,MAAO,OACPE,OAAQ,oBACRiC,QAAS,UAJjB,SAOI,kCACI,6BACI,0EAEJ,6BACI,oBAAIpC,MAAO,CAAEE,OAAQ,OAAQyB,cAAe,SAAUb,UAAW,UAAjE,SACI,wBAAQd,MA7B1B,CACdC,MAAO,QACPC,OAAQ,SACRE,gBAAiB,UACjBc,aAAc,MACdf,OAAQ,OACRgB,MAAO,OACPN,WAAY,OACZO,SAAU,QAqBsB,SACI,mBACIQ,KAAK,IACL1C,OAAO,QACPc,MAAO,CAAE8B,eAAgB,OAAQX,MAAO,QAH5C,sCAUZ,6BACI,oDAEJ,6BACI,oBAAInB,MAAO,CAAEc,UAAW,QAAxB,yDCtBrBuB,EAlCG,WAWd,OACI,uBAAOrC,MAXS,CAChBC,MAAO,OACPC,OAAQ,QACRU,OAAQ,SACRT,OAAQ,yBACRC,gBAAiB,OACjBC,UAAW,sBACXc,MAAO,WAIP,SACI,wBAAOnB,MAAO,CAAEE,OAAQ,OAAxB,UACI,6BACI,oBAAIF,MAAO,CAAEc,UAAW,UAAxB,SACI,sBAAMC,KAAK,IAAX,yFAGR,6BACI,oBAAIf,MAAO,CAAEc,UAAW,UAAxB,SACI,uBAAMC,KAAK,IAAX,oCAC2B,mBAAGa,KAAK,oBAAR,+BAD3B,wOAImC,mBAAGA,KAAK,0BAAR,kBAJnC,iBCmCTU,EAjDH,SAAA1G,GACR,IAEI2G,EAFYlE,qBAAWC,GAEJ,GAAGqB,YAAYd,KAAI,SAAC2D,EAAMC,GAC7C,OACI,cAAC,EAAD,CAEIrF,MAAOoF,EAAKpF,MACZoE,YAAagB,EAAK/E,aAClBgE,WAAYe,EAAK9E,YACjBqE,YAAaS,EAAK1E,aAClBkE,WAAYQ,EAAKzE,YACjB2D,UAAWc,EAAK7E,WAChBsE,UAAWO,EAAKxE,WAChB6D,OAAQW,EAAK3E,YACbqE,OAAQM,EAAKE,aATRD,MAcjB,OACI,sBAAMvG,UAAU,aAAayG,IAAK/G,EAAMgH,IAAxC,SACI,kCACI,sBACI1G,UAAU,MACV8D,MAAO,CACHC,MAAO,QACP4C,WACI,4FACJjC,OAAQ,KANhB,UASI,qBAAKZ,MAAO,CAAEC,MAAO,MAAOW,OAAQ,YAAaE,UAAW,SAAUM,SAAU,QAAhF,wHAIA,sBAAKpB,MAAO,CAAEI,gBAAiB,6BAA8BgC,QAAS,SAAtE,UACI,cAAC,EAAD,IACA,cAAC,EAAD,IACCG,EACD,cAAC,EAAD,IACA,cAAC,EAAD,eCzCT,SAASO,IACpB,IAAIC,EAAS,KAmBb,OACI,sBAAK7G,UAAU,MAAf,UACI,cAAC,EAAD,CAAS4D,aAdW,WACxB,IAAIkD,EAAM,IAAIC,IAERC,EAAOH,EAAOI,UAAUC,QAAQ,YAAa,yBAAyBA,QAAQ,aAAc,WAElGJ,EAAIK,KAAK,aAAcH,GAEvBF,EAAIM,cAAc,CAAExH,KAAM,SAAUT,MAAK,SAAUkI,GAC/CC,IAAOD,EAAS,iBAOhB,cAAC,EAAD,CAAKX,IApBD,SAAAD,GAERI,EAASJ,Q,YCFJc,EAAiB,SAACC,EAAOC,GAClC,OAAQA,EAAO7H,MACX,IAAK,cACD,OAbO,SAAC4H,EAAOC,GACvB,IAAMC,EAAY,sBAAOF,EAAM/D,aAAb,CAA0BgE,EAAOjE,UACnD,OAAO5C,EAAU4G,EAAO,CAAE/D,YAAaiE,IAWxBC,CAAWH,EAAOC,GAC7B,IAAK,iBACD,OAVU,SAACD,EAAOC,GAC1B,IAAMC,EAAeF,EAAM/D,YAAYmE,MAAM,GAAI,GACjD,OAAOhH,EAAU4G,EAAO,CAAE/D,YAAaiE,IAQxBG,CAAcL,GACzB,QACI,OAAOA,ICXNpF,G,MAAU0F,2BACjBC,EAAeR,EACjB,CACI9D,YAAa,CACT,CACIvC,MAAO,+BACPK,aAAc,qEACdC,YACI,gOACJC,YAAY,EACZG,aAAc,kDACdC,YACI,uVACJC,YAAY,GAEhB,CACIZ,MAAO,wBACPK,aAAc,qDACdC,YACI,uPACJC,YAAY,EACZG,aAAc,8EACdC,YACI,8NACJC,YAAY,KAIxB,CAAElC,KAAM,KAGNoI,EAAO,WACT,IAAMC,EAAUC,qBAAWX,EAAgBQ,GAE3C,OACI,cAAC3F,EAAQ+F,SAAT,CAAkBlI,MAAOgI,EAAzB,SACI,cAACrB,EAAD,OAKZwB,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,eAAe,SAElDvJ,K","file":"static/js/main.b96c5692.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\n\nimport '../scss/app.scss'\n\nconst Input = props => {\n    let eleInput = null\n\n    switch (props.type) {\n        case 'input':\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <input\n                        id={props.label}\n                        className=\"input\"\n                        value={props.value}\n                        {...props.config}\n                        onChange={props.inputChange}\n                    />\n                </>\n            )\n            break\n        case 'set_url_input_one':\n            let disabledOne\n\n            if (props.label === 'set_url_one' && !props.setUrlOne) {\n                disabledOne = true\n            } else {\n                disabledOne = false\n            }\n\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <input\n                        id={props.label}\n                        className=\"input\"\n                        value={props.value}\n                        {...props.config}\n                        onChange={props.inputChange}\n                        disabled={disabledOne}\n                    />\n                </>\n            )\n            break\n        case 'set_url_input_two':\n            let disabledTwo\n\n            if (props.label === 'set_url_two' && !props.setUrlTwo) {\n                disabledTwo = true\n            } else {\n                disabledTwo = false\n            }\n\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <input\n                        id={props.label}\n                        className=\"input\"\n                        value={props.value}\n                        {...props.config}\n                        onChange={props.inputChange}\n                        disabled={disabledTwo}\n                    />\n                </>\n            )\n            break\n        case 'textarea':\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <textarea\n                        id={props.label}\n                        className=\"textarea\"\n                        value={props.value}\n                        {...props.config}\n                        onChange={props.inputChange}\n                    />\n                </>\n            )\n            break\n        case 'checkbox':\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <input\n                        id={props.label}\n                        className=\"checkbox\"\n                        {...props.config}\n                        onChange={props.inputChange}\n                        checked={props.ticked}\n                    />\n                    <br />\n                </>\n            )\n            break\n        default:\n            eleInput = (\n                <>\n                    <label htmlFor={props.label}>{props.label}</label>\n                    <br />\n                    <input\n                        id={props.label}\n                        className=\"input\"\n                        value={props.value}\n                        {...props.config}\n                        onChange={props.inputChange}\n                    />\n                </>\n            )\n            break\n    }\n\n    return <>{eleInput}</>\n}\n\nexport default Input\n","export const updateObj = (oldObj, updatedProps) => {\n    return {\n        ...oldObj,\n        ...updatedProps,\n    }\n}\n","import React, { useState, useContext } from 'react'\n\nimport Input from './Input'\nimport { updateObj } from '../utils/utilities'\nimport { context } from '../index'\n\nconst SideBar = props => {\n    // the states control the input behavior\n    const [input, setInput] = useState({\n        controls: {\n            title: {\n                eleType: 'input',\n                eleConfig: {\n                    type: 'text',\n                    placeholder: 'title',\n                },\n                val: '',\n            },\n            subtitle_one: {\n                eleType: 'input',\n                eleConfig: {\n                    type: 'text',\n                    placeholder: 'subtitle',\n                },\n                val: '',\n            },\n            content_one: {\n                eleType: 'textarea',\n                eleConfig: {\n                    placeholder: 'content',\n                },\n                val: '',\n            },\n            button_one: {\n                eleType: 'checkbox',\n                eleConfig: {\n                    type: 'checkbox',\n                },\n                tick: false,\n            },\n            set_url_one: {\n                eleType: 'set_url_input_one',\n                eleConfig: {\n                    type: 'text',\n                    placeholder: 'url',\n                },\n                val: '',\n            },\n            subtitle_two: {\n                eleType: 'input',\n                eleConfig: {\n                    type: 'text',\n                    placeholder: 'subtitle',\n                },\n                val: '',\n            },\n            content_two: {\n                eleType: 'textarea',\n                eleConfig: {\n                    placeholder: 'content',\n                },\n                val: '',\n            },\n            button_two: {\n                eleType: 'checkbox',\n                eleConfig: {\n                    type: 'checkbox',\n                },\n                tick: false,\n            },\n            set_url_two: {\n                eleType: 'set_url_input_two',\n                eleConfig: {\n                    type: 'text',\n                    placeholder: 'url',\n                },\n                val: '',\n            },\n        },\n        setUrl: {\n            button_one: false,\n            button_two: false,\n        },\n    })\n    const [section, setSection] = useContext(context)\n\n    // as the user types in, change the input states\n    const inputChangeHandler = (e, controlName) => {\n        // exclude button properties\n        if (input.controls[controlName].eleType !== 'checkbox') {\n            const updatedControls = updateObj(input.controls, {\n                [controlName]: updateObj(input.controls[controlName], {\n                    val: e.target.value,\n                }),\n            })\n\n            setInput({ controls: updatedControls, setUrl: { ...input.setUrl } })\n        }\n\n        // button properties\n        if (input.controls[controlName].eleType === 'checkbox') {\n            if (e.target.checked) {\n                const updatedControls = updateObj(input.controls, {\n                    [controlName]: updateObj(input.controls[controlName], {\n                        tick: true,\n                    }),\n                })\n                setInput({ controls: updatedControls, setUrl: { ...input.setUrl, [controlName]: true } })\n            } else {\n                const updatedControls = updateObj(input.controls, {\n                    [controlName]: updateObj(input.controls[controlName], {\n                        tick: false,\n                    }),\n                })\n                setInput({ controls: updatedControls, setUrl: { ...input.setUrl, [controlName]: false } })\n            }\n        }\n    }\n\n    // add edm section\n    const submitHandler = e => {\n        e.preventDefault()\n\n        let formData = {}\n\n        const inputStateKeys = [\n            'title',\n            'subtitle_one',\n            'subtitle_two',\n            'content_one',\n            'content_two',\n            'set_url_one',\n            'set_url_two',\n        ]\n\n        inputStateKeys.forEach(inputStateKey => {\n            formData[inputStateKey] = input.controls[inputStateKey].val\n            input.controls[inputStateKey].val = ''\n            input.setUrl.button_one = false\n            input.setUrl.button_two = false\n        })\n\n        const buttonStateKeys = ['button_one', 'button_two']\n\n        buttonStateKeys.forEach(buttonStateKey => {\n            formData[buttonStateKey] = input.controls[buttonStateKey].tick\n            input.controls[buttonStateKey].tick = false\n        })\n\n        setSection({ type: 'ADD_SECTION', payload: formData })\n    }\n\n    // remove edm section\n    const removeSectionHandler = () => {\n        setSection({ type: 'REMOVE_SECTION' })\n    }\n\n    // form input configuration\n    let formElement = []\n\n    for (let key in input.controls) {\n        formElement.push({\n            key,\n            config: input.controls[key],\n        })\n    }\n\n    const form = formElement.map(ele => {\n        return (\n            <Input\n                key={ele.key}\n                label={ele.key}\n                value={ele.config.val}\n                type={ele.config.eleType}\n                config={ele.config.eleConfig}\n                inputChange={e => inputChangeHandler(e, ele.key)}\n                ticked={ele.config.tick}\n                setUrlOne={input.setUrl.button_one}\n                setUrlTwo={input.setUrl.button_two}\n            />\n        )\n    })\n\n    return (\n        <section className=\"sideDrawer\">\n            <h4>EDM Creator</h4>\n            <form onSubmit={submitHandler}>\n                {form}\n                <button>add section</button>\n            </form>\n            <div className=\"btnGp\">\n                <button disabled={section.sectionData.length <= 0} id=\"removeBtn\" onClick={removeSectionHandler}>\n                    remove section\n                </button>\n                <button id=\"downloadBtn\" onClick={props.downloadHtml}>\n                    download html file\n                </button>\n            </div>\n        </section>\n    )\n}\n\nexport default SideBar\n","import React from 'react'\n\nconst EDMHeader = () => {\n    const googleLogoStyle = {\n        width: '100px',\n        height: 'auto',\n        display: 'block',\n    }\n\n    const dataStudioStyle = {\n        width: '150px',\n        height: 'auto',\n        float: 'right',\n        display: 'block',\n    }\n\n    const headerStyle = {\n        width: '100%',\n        height: '5rem',\n        border: '1rem solid transparent',\n        backgroundColor: '#fff',\n        boxShadow: '2px 2px 2px #D6D6D6',\n    }\n\n    return (\n        <table style={headerStyle}>\n            <tbody>\n                <tr>\n                    <td>\n                        <img src=\"https://i.imgur.com/wxVAHma.png\" alt=\"google logo\" style={googleLogoStyle}></img>\n                    </td>\n                    <td>\n                        <img src=\"https://i.imgur.com/FQMVFE3.png\" alt=\"data studio img\" style={dataStudioStyle}></img>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default EDMHeader\n","import React from 'react'\n\nconst EDMBanner = () => {\n    const imgStyle = {\n        width: '100%',\n        height: 'auto',\n        display: 'block',\n    }\n\n    const bannerStyle = {\n        width: '95%',\n        border: '1rem solid transparent',\n        align: 'center',\n        margin: '1rem auto',\n        backgroundColor: '#fff',\n        boxShadow: '2px 2px 2px #D6D6D6',\n    }\n\n    return (\n        <table style={bannerStyle}>\n            <thead>\n                <tr>\n                    <th style={{ fontWeight: '400', textAlign: 'center' }}>\n                        <font size=\"5\">January 2019 - Product Update</font>\n                    </th>\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    <td>\n                        <img src=\"https://i.imgur.com/WCF8MeI.png\" alt=\"mainBanner\" style={imgStyle}></img>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default EDMBanner\n","import React from 'react'\n\nconst EDMBody = props => {\n    const sectionStyle = {\n        width: '95%',\n        margin: '1rem auto',\n        backgroundColor: '#fff',\n        boxShadow: '2px 2px 2px #D6D6D6',\n        border: '1.5rem solid transparent',\n        lineHeight: '1.7rem',\n        cellspacing: '0',\n        cellpadding: '0',\n        align: 'center',\n    }\n\n    const learnMoreBtn = {\n        width: '10rem',\n        height: '2.5rem',\n        backgroundColor: '#3B75FA',\n        borderRadius: '5px',\n        border: 'none',\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: '1rem',\n    }\n\n    return (\n        <table style={sectionStyle}>\n            <tbody>\n                {props.title ? (\n                    <tr>\n                        <th style={{ textAlign: 'left', color: '#3B75FA', fontWeight: '800' }}>{props.title}</th>\n                    </tr>\n                ) : null}\n                {props.subtitleOne ? (\n                    <tr>\n                        <th style={{ color: '#4E4E4E', textAlign: 'left' }}>{props.subtitleOne}</th>\n                    </tr>\n                ) : null}\n                {props.contentOne ? (\n                    <tr>\n                        <td style={{ color: '#4E4E4E' }}>{props.contentOne}</td>\n                    </tr>\n                ) : null}\n                {props.buttonOne ? (\n                    <tr>\n                        <td style={{ height: '4rem', verticalAlign: 'middle', textAlign: 'center' }}>\n                            <button style={learnMoreBtn}>\n                                <a href={props.urlOne} target=\"blank\" style={{ textDecoration: 'none', color: '#fff' }}>\n                                    LEARN MORE\n                                </a>\n                            </button>\n                        </td>\n                    </tr>\n                ) : null}\n\n                {props.subtitleTwo ? (\n                    <tr>\n                        <th style={{ color: '#4E4E4E', textAlign: 'left' }}>{props.subtitleTwo}</th>\n                    </tr>\n                ) : null}\n                {props.contentTwo ? (\n                    <tr>\n                        <td style={{ color: '#4E4E4E' }}>{props.contentTwo}</td>\n                    </tr>\n                ) : null}\n                {props.buttonTwo ? (\n                    <tr>\n                        <td style={{ height: '4rem', verticalAlign: 'middle', textAlign: 'center' }}>\n                            <button style={learnMoreBtn}>\n                                <a href={props.urlTwo} target=\"blank\" style={{ textDecoration: 'none', color: '#fff' }}>\n                                    LEARN MORE\n                                </a>\n                            </button>\n                        </td>\n                    </tr>\n                ) : null}\n            </tbody>\n        </table>\n    )\n}\n\nexport default EDMBody\n","import React from 'react'\n\nconst EDMContactInfo = () => {\n    const contactInfoStyle = {\n        width: '95%',\n        border: '1.5rem solid transparent',\n        align: 'center',\n        margin: '1rem auto',\n        backgroundColor: '#fff',\n        boxShadow: '2px 2px 2px #D6D6D6',\n        lineHeight: '1.5rem',\n        color: '#4E4E4E',\n    }\n\n    const accessBtn = {\n        width: '15rem',\n        height: '2.5rem',\n        backgroundColor: '#3B75FA',\n        borderRadius: '5px',\n        border: 'none',\n        color: '#fff',\n        fontWeight: 'bold',\n        fontSize: '1rem',\n    }\n\n    return (\n        <table style={contactInfoStyle}>\n            <tbody>\n                <tr>\n                    <td>\n                        <table\n                            style={{\n                                width: '100%',\n                                border: '2px solid #3B75FA',\n                                padding: '1.5rem',\n                            }}\n                        >\n                            <tbody>\n                                <tr>\n                                    <td>Thanks for reading our monthly update.</td>\n                                </tr>\n                                <tr>\n                                    <td style={{ height: '4rem', verticalAlign: 'middle', textAlign: 'center' }}>\n                                        <button style={accessBtn}>\n                                            <a\n                                                href=\" \"\n                                                target=\"blank\"\n                                                style={{ textDecoration: 'none', color: '#fff' }}\n                                            >\n                                                ACCESS DATA STUDIO\n                                            </a>\n                                        </button>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>Happy Reporting,</td>\n                                </tr>\n                                <tr>\n                                    <th style={{ textAlign: 'left' }}>The Google Data Studio Team</th>\n                                </tr>\n                            </tbody>\n                        </table>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default EDMContactInfo\n","import React from 'react'\n\nconst EDMFooter = () => {\n    const footerStyle = {\n        width: '100%',\n        height: '13rem',\n        margin: '0 auto',\n        border: '3rem solid transparent',\n        backgroundColor: '#fff',\n        boxShadow: '2px 2px 2px #D6D6D6',\n        color: '#797979',\n    }\n\n    return (\n        <table style={footerStyle}>\n            <tbody style={{ height: '20%' }}>\n                <tr>\n                    <td style={{ textAlign: 'center' }}>\n                        <font size=\"1\">© 2019 Google LLC 1600 Amphitheatre Parkway, Mountain View, CA 94043</font>\n                    </td>\n                </tr>\n                <tr>\n                    <td style={{ textAlign: 'center' }}>\n                        <font size=\"1\">\n                            This email was sent to <a href=\"chien41@gmail.com\">chien41@gmail.com</a> because you\n                            indicated that you want to receive announcements about the latest changes, enhancements, and\n                            new features from the Google Data Studio team. If you do not wish to receive such emails in\n                            the future, please unsubscribe <a href=\"https://www.google.com/\">here</a>.\n                        </font>\n                    </td>\n                </tr>\n            </tbody>\n        </table>\n    )\n}\n\nexport default EDMFooter\n","import React, { useContext } from 'react'\n\nimport { context } from '../../index'\nimport EDMHeader from './EDMHeader'\nimport EDMBanner from './EDMBanner'\nimport EDMBody from './EDMBody'\nimport EDMContactInfo from './EDMContactInfo'\nimport EDMFooter from './EDMFooter'\n\nconst EDM = props => {\n    const section = useContext(context)\n\n    let sections = section[0].sectionData.map((item, i) => {\n        return (\n            <EDMBody\n                key={i}\n                title={item.title}\n                subtitleOne={item.subtitle_one}\n                contentOne={item.content_one}\n                subtitleTwo={item.subtitle_two}\n                contentTwo={item.content_two}\n                buttonOne={item.button_one}\n                buttonTwo={item.button_two}\n                urlOne={item.set_url_one}\n                urlTwo={item.set_url_Two}\n            />\n        )\n    })\n\n    return (\n        <main className=\"edmPreview\" ref={props.edm}>\n            <section>\n                <div\n                    className=\"edm\"\n                    style={{\n                        width: '600px',\n                        fontFamily:\n                            'Segoe UI, Roboto,Oxygen,Ubuntu,Cantarell, Fira Sans, Droid Sans,Helvetica Neue,sans-serif',\n                        margin: '0',\n                    }}\n                >\n                    <div style={{ width: '98%', margin: '1rem auto', textAlign: 'center', fontSize: '.3em' }}>\n                        See the latest features in Data Studio and explore tips and best practices from our team and\n                        fellow users.\n                    </div>\n                    <div style={{ backgroundColor: 'rgba(158, 165, 177, 0.411)', padding: '.1rem' }}>\n                        <EDMHeader />\n                        <EDMBanner />\n                        {sections}\n                        <EDMContactInfo />\n                        <EDMFooter />\n                    </div>\n                </div>\n            </section>\n        </main>\n    )\n}\n\nexport default EDM\n","import React from 'react'\nimport JSZip from 'jszip'\nimport saveAs from 'file-saver'\n\nimport SideBar from './components/SideBar'\nimport EDM from './components/edm/EDM'\n\nimport './scss/app.scss'\n\nexport default function App() {\n    let edmRef = null\n\n    const edm = ref => {\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        edmRef = ref\n    }\n\n    const downloadHtmlHandler = () => {\n        let zip = new JSZip()\n\n        const html = edmRef.innerHTML.replace('<section>', '<!DOCTYPE html><html>').replace('</section>', '</html>')\n\n        zip.file('index.html', html)\n\n        zip.generateAsync({ type: 'blob' }).then(function (content) {\n            saveAs(content, 'edm.zip')\n        })\n    }\n\n    return (\n        <div className=\"app\">\n            <SideBar downloadHtml={downloadHtmlHandler} />\n            <EDM edm={edm} />\n        </div>\n    )\n}\n","import { updateObj } from '../utils/utilities'\n\nconst addSection = (state, action) => {\n    const updatedState = [...state.sectionData, action.payload]\n    return updateObj(state, { sectionData: updatedState })\n}\n\nconst removeSection = (state, action) => {\n    const updatedState = state.sectionData.slice(0, -1)\n    return updateObj(state, { sectionData: updatedState })\n}\n\nexport const sectionReducer = (state, action) => {\n    switch (action.type) {\n        case 'ADD_SECTION':\n            return addSection(state, action)\n        case 'REMOVE_SECTION':\n            return removeSection(state, action)\n        default:\n            return state\n    }\n}\n","import React, { createContext, useReducer } from 'react'\nimport ReactDOM from 'react-dom'\nimport reportWebVitals from './reportWebVitals'\n\nimport App from './App'\nimport { sectionReducer } from './reducer/sectionReducer'\nimport './scss/index.scss'\n\nexport const context = createContext()\nconst initialState = sectionReducer(\n    {\n        sectionData: [\n            {\n                title: 'PRODUCT & FEATURE HIGHLIGHTS',\n                subtitle_one: 'Introducing Data Studio Community Visualizations Developer Preview',\n                content_one:\n                    'The new Data Studio Community Visualizations feature, in developer preview, allows you to build new charts and customize styling options, providing even more freedom and flexibility in the stories you tell with your data.',\n                button_one: true,\n                subtitle_two: 'Duplicate your filters and blended data sources',\n                content_two:\n                    'You can now duplicate filters and blended data sources within the same report. To do this, edit your report, then choose the “Resource” menu and select the resource you want to manage. Use the “Duplicate” action to make the copy. You can then apply the copied filter or blended data source to other charts in the report.',\n                button_two: true,\n            },\n            {\n                title: 'TIPS & BEST PRACTICES',\n                subtitle_one: '2018: The Year in Data Studio Community Connectors',\n                content_one:\n                    \"It's been a busy year for Data Studio Community Connectors. Since the developer launch, we've added over ten new features, had significant growth, seen partners grow their businesses, and collaborated with the community on open source projects.\",\n                button_one: true,\n                subtitle_two: 'At airBaltic, evidence-based marketing takes flight with Google Data Studio',\n                content_two:\n                    'Air travel might be getting easier, but for the companies that carry us from where we are to where we are going, there is an amazing amount of complexity at work — and they need insights to make critical decisions.',\n                button_two: true,\n            },\n        ],\n    },\n    { type: '' }\n)\n\nconst Home = () => {\n    const reducer = useReducer(sectionReducer, initialState)\n\n    return (\n        <context.Provider value={reducer}>\n            <App />\n        </context.Provider>\n    )\n}\n\nReactDOM.render(<Home />, document.getElementById('root'))\n\nreportWebVitals()\n"],"sourceRoot":""}